* Haskell notes

** DONE Day7
   CLOSED: [2021-08-17 Tue 19:41]
   There is a lot of needless complexity and my solution is unclear.
   - I should try to use input parser as a separate function rather than linking it to the ~Read~ class. Here I had to make ~Con~ a data type when a ~type Con = Map String ConIn~ would have sufficed.
   - The recursion is non-trivial, ~evalCon~ ->  ~evalWire~ -> ~eval~ -> ~evalCon~. It could be simpler.
   - Must try reader and state monads and see how that solution compares to this.
     
** Day8

** DONE Day10
   CLOSED: [2021-09-29 Wed 12:30]
   Pretty straightforward implementation. 

** DONE Day 11
   CLOSED: [2021-09-29 Wed 14:59]
   - couple of char functions ~ord~, ~chr~.
   - good use of ~until~
   - could have improved ~double2s~ for checking that at least 2 unique items exist in a list 
